<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Simpleflow</name>
    </assembly>
    <members>
        <member name="T:Simpleflow.CacheOptions">
            <summary>
            Represents the cache options that applied to <see cref="T:Simpleflow.Services.CacheService"/>
            </summary>
        </member>
        <member name="P:Simpleflow.CacheOptions.SlidingExpiration">
            <summary>
            Gets or sets how long a cache entry can be inactive (e.g. not accessed) before it will be removed.
            This will not extend the entry lifetime beyond the absolute expiration (if set).
            </summary>
        </member>
        <member name="P:Simpleflow.CacheOptions.AbsoluteExpiration">
            <summary>
            Gets or sets an absolute expiration date for the cache entry.
            </summary>
        </member>
        <member name="P:Simpleflow.CacheOptions.HashingAlgToIdentifyScriptUniquely">
            <summary>
            Gets or sets hashing algorithm to identify script compiled object uniquely. This method is used when no script id specified.
            Check available hash algorithms and names here: https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.hashalgorithm.create?view=net-6.0
            </summary>
        </member>
        <member name="T:Simpleflow.CodeGenerator.SimpleflowCodeVisitor`1">
            <summary>
             Handles Program, Let, Mutate and Rule 
            </summary>
            <typeparam name="TArg"></typeparam>
        </member>
        <member name="T:Simpleflow.Exceptions.AccessDeniedException">
            <summary>
            This exception is thrown when a script uses a denied function.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.AccessDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.AccessDeniedException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="T:Simpleflow.Exceptions.ArgumentImmutableExeception">
            <summary>
            Represents base exception for all Simpleflow exceptions
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.ArgumentImmutableExeception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.SimpleflowException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.DuplicateFunctionException">
            <summary>
            The exception is thrown when a function with a name is already registered.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.DuplicateFunctionException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.DuplicateFunctionException"/> class with
            a specified function name.
            </summary>
            <param name="functionName">The name of the function that caused the exception</param>
            <param name="message">The message describes the exception</param>
        </member>
        <member name="P:Simpleflow.Exceptions.DuplicateFunctionException.FunctionName">
            <summary>
            Gets name of the function that has been re-registered.
            </summary>
        </member>
        <member name="T:Simpleflow.Exceptions.DuplicateParametersException">
            <summary>
            The exception is thrown when same parameters are specified multiple times
            while invoking a function in script
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.DuplicateParametersException.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.DuplicateParametersException"/> class with
            a specified function name.
            </summary>
            <param name="repeatedParameters">The repeated parameters that caused the exception.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.DuplicateVariableDeclarationException">
            <summary>
            The exception is thrown when a same variable is defined more than once.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.DuplicateVariableDeclarationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.DuplicateVariableDeclarationException"/> class with
            a specified variable name.
            </summary>
            <param name="name">The variable name that caused the exception.</param>
        </member>
        <member name="P:Simpleflow.Exceptions.DuplicateVariableDeclarationException.VariableName">
            <summary>
            Gets name of the variable that has been declared more than once.
            </summary>
        </member>
        <member name="T:Simpleflow.Exceptions.InvalidFunctionException">
            <summary>
            The exception is thrown when function name is not registered with the Simpleflow runtime.
            Please use <see cref="T:Simpleflow.FunctionRegister"/> or <see cref="T:Simpleflow.IFunctionRegister"/> appropriately to register functions.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.InvalidFunctionException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.InvalidFunctionException"/> class with
            a specified function name.
            </summary>
            <param name="functionName">The function name that caused the exception.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Simpleflow.Exceptions.InvalidFunctionException.FunctionName">
            <summary>
            Gets the name of the function that caused the error.
            </summary>
        </member>
        <member name="T:Simpleflow.Exceptions.InvalidFunctionNameException">
            <summary>
            The exception is thrown when function name is not specified as per naming standards.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.InvalidFunctionNameException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.InvalidFunctionNameException"/> class with
            a specified variable name.
            </summary>
            <param name="functionName">The function name that caused the exception.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Simpleflow.Exceptions.InvalidFunctionNameException.FunctionName">
            <summary>
            Gets the name of the function that caused the error.
            </summary>
        </member>
        <member name="T:Simpleflow.Exceptions.InvalidFunctionParameterNameException">
            <summary>
            The exception is thrown when function parameter is not valid type or not declared.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.InvalidFunctionParameterNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.InvalidFunctionException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.InvalidPropertyException">
            <summary>
            The exception is thrown when unavailable property is specified to access.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.InvalidPropertyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.InvalidPropertyException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.SimpleflowException">
            <summary>
            Represents base exception for all Simpleflow exceptions
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.SimpleflowException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.SimpleflowException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.SyntaxException">
            <summary>
            The exception is thrown when any syntax errors are present in the Simpleflow script.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.SyntaxException.#ctor(System.String,System.Collections.Generic.IEnumerable{Simpleflow.SyntaxError})">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.SimpleflowException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="errors">The list of syntax errors that caused the exception.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.UndeclaredVariableException">
            <summary>
            The exception is thrown when a variable is used that has not been declared in the script.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.UndeclaredVariableException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.UndeclaredVariableException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="name">The name of the variable that caused the exception.</param>
        </member>
        <member name="P:Simpleflow.Exceptions.UndeclaredVariableException.VariableName">
            <summary>
            Gets the name of the variable that has not been declared in script.
            </summary>
        </member>
        <member name="T:Simpleflow.Exceptions.ValueTypeMismatchException">
            <summary>
            The exception is thrown when different type of value is specified than initially declared type.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.ValueTypeMismatchException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.ValueTypeMismatchException"/> class with
            a specified variable name.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Simpleflow.Exceptions.ValueTypeMismatchException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.ValueTypeMismatchException"/> class with
            a specified variable name.
            </summary>
            <param name="value">The value that caused the exception.</param>
            <param name="expectedType">The expected data type of value.</param>
        </member>
        <member name="T:Simpleflow.Exceptions.VariableNameViolationException">
            <summary>
            The exception is thrown when a keyword is used for a variable.
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.VariableNameViolationException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simpleflow.Exceptions.VariableNameViolationException"/> class with
            a specified variable name.
            </summary>
            <param name="name">The name that caused the exception.</param>
            <param name="message">The message describes the exception.</param>
        </member>
        <member name="T:Simpleflow.Extensions.SimpleflowExtensions">
            <summary>
            Extension methods to run Simpleflow with various input types.
            </summary>
        </member>
        <member name="T:Simpleflow.FlowContext`1">
            <summary>
            A <see cref="T:Simpleflow.FlowContext`1"/> instance represents input and output.
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.Trace">
            <summary>
            Gets the trace to verify the middleware info
            </summary>
        </member>
        <member name="T:Simpleflow.FlowContextOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContextOptions.Id">
            <inheritdoc/>
        </member>
        <member name="P:Simpleflow.FlowContextOptions.ResetCache">
            <inheritdoc/>
        </member>
        <member name="P:Simpleflow.FlowContextOptions.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="T:Simpleflow.FlowOptions">
            <inheritdoc />
        </member>
        <member name="P:Simpleflow.FlowOptions.AllowArgumentToMutate">
            <summary>
            Gets or sets AllowArgumentToMutate
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOptions.AllowFunctions">
            <summary>
            Gets or sets AllowFunctions
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOptions.DenyFunctions">
            <summary>
            Gets or sets DenyFunctions
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOptions.CacheOptions">
            <summary>
            Gets or sets CacheOptions
            </summary>
        </member>
        <member name="T:Simpleflow.FlowOutput">
            <summary>
            Represents final output of simple flow
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOutput.Messages">
            <summary> 
            Get or set messages
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOutput.Errors">
            <summary>
            if there are errors engines throws an exception ValidationException 
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOutput.Output">
            <summary>
            Get or set arbitrary objects as output from script
            </summary>
        </member>
        <member name="T:Simpleflow.FunctionRegister">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.FunctionRegister.Default">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.FunctionRegister.Add(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="activity"></param>
            <returns></returns>
            
        </member>
        <member name="M:Simpleflow.FunctionRegister.Add(System.String,System.Delegate)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="delegate"></param>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.FunctionRegister.GetFunction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.FunctionRegister.IsFunctionAvailableInClass(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.IFunctionRegister">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.IFunctionRegister.Add(System.String,System.Delegate)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="delegate"></param>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.IFunctionRegister.GetFunction(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.IContextOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.IContextOptions.Id">
            <summary>
            Gets or sets unique id of the script
            If Id is supplied, CacheService will use it to identify the compiled object
            in cache otherwise it creates a hash id for that script.
            </summary>
        </member>
        <member name="P:Simpleflow.IContextOptions.ResetCache">
            <summary>
            Reset cache allows to remove the item from cache if exists and add it once its compiled.
            </summary>
        </member>
        <member name="P:Simpleflow.IContextOptions.CancellationToken">
            <summary>
            Gets or sets <see cref="T:System.Threading.CancellationToken"/>
            </summary>
        </member>
        <member name="T:Simpleflow.IFlowPipelineService">
            <summary>
            Represents middleware abstraction for pipeline configuration.
            </summary>
        </member>
        <member name="M:Simpleflow.IFlowPipelineService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <summary>
            Run pipeline service
            </summary>
            <param name="context"></param>
            <param name="next"><paramref name="next"/> would be null if no service in queue after the current one</param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.IOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.AllowArgumentToMutate">
            <summary>
            Gets or sets AllowArgumentToMutate
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.AllowFunctions">
            <summary>
            Gets or sets AllowFunctions
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.DenyFunctions">
            <summary>
            Gets or sets DenyFunctions
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.CacheOptions">
            <summary>
            Gets or sets cache options
            </summary>
        </member>
        <member name="T:Simpleflow.ISimpleflow">
            <summary>
            Defines a contract to execute simple flow
            </summary>
        </member>
        <member name="T:Simpleflow.ISimpleflowPipelineBuilder">
            <summary>
            Represents simple flow builder abstraction.
            Builds pipeline using middleware and with default services.
            </summary>
        </member>
        <member name="P:Simpleflow.ISimpleflowPipelineBuilder.Services">
            <summary>
            Gets list of services that have been added
            </summary>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IOptions)">
            <summary>
            Adds default core services. Please check the implementation
            class documentation for added default services.
            </summary>
            <returns>The <see cref="T:Simpleflow.ISimpleflowPipelineBuilder"/></returns>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IFunctionRegister,Simpleflow.IOptions)">
            <summary>
            Adds default core services. Please check the implementation
            class documentation for added default services.
            </summary>
            <returns>The <see cref="T:Simpleflow.ISimpleflowPipelineBuilder"/></returns>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.AddPipelineServices(Simpleflow.IFlowPipelineService[])">
            <summary>
            Adds middleware services to simpleflow 
            </summary>
            <param name="services">Specify the list of services to be added</param>
            <returns>The <see cref="T:Simpleflow.ISimpleflowPipelineBuilder"/> </returns>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.Build">
            <summary>
            Builds pipeline and provides core engine
            with all the middleware that have been configured
            </summary>
            <returns>The <see cref="T:Simpleflow.ISimpleflow"/></returns>
        </member>
        <member name="T:Simpleflow.NextPipelineService`1">
            <summary>
            Represents a function to execute next middleware in the pipeline. 
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Simpleflow.Parser.SimpleflowParserBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.ISimpleflowParserListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterTemplateStringLiteral(Simpleflow.Parser.SimpleflowParser.TemplateStringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitTemplateStringLiteral(Simpleflow.Parser.SimpleflowParser.TemplateStringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterTemplateStringAtom(Simpleflow.Parser.SimpleflowParser.TemplateStringAtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringAtom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitTemplateStringAtom(Simpleflow.Parser.SimpleflowParser.TemplateStringAtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringAtom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterIdentifierIndex(Simpleflow.Parser.SimpleflowParser.IdentifierIndexContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.identifierIndex"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitIdentifierIndex(Simpleflow.Parser.SimpleflowParser.IdentifierIndexContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.identifierIndex"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterIndex(Simpleflow.Parser.SimpleflowParser.IndexContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.index"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitIndex(Simpleflow.Parser.SimpleflowParser.IndexContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.index"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterIndexExpression(Simpleflow.Parser.SimpleflowParser.IndexExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.indexExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitIndexExpression(Simpleflow.Parser.SimpleflowParser.IndexExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.indexExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterArrayLiteral(Simpleflow.Parser.SimpleflowParser.ArrayLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitArrayLiteral(Simpleflow.Parser.SimpleflowParser.ArrayLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterArrayValue(Simpleflow.Parser.SimpleflowParser.ArrayValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitArrayValue(Simpleflow.Parser.SimpleflowParser.ArrayValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterEos(Simpleflow.Parser.SimpleflowParser.EosContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.eos"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitEos(Simpleflow.Parser.SimpleflowParser.EosContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.eos"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Simpleflow.Parser.SimpleflowParserBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.ISimpleflowParserVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitTemplateStringLiteral(Simpleflow.Parser.SimpleflowParser.TemplateStringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitTemplateStringAtom(Simpleflow.Parser.SimpleflowParser.TemplateStringAtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringAtom"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitIdentifierIndex(Simpleflow.Parser.SimpleflowParser.IdentifierIndexContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.identifierIndex"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitIndex(Simpleflow.Parser.SimpleflowParser.IndexContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.index"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitIndexExpression(Simpleflow.Parser.SimpleflowParser.IndexExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.indexExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitArrayLiteral(Simpleflow.Parser.SimpleflowParser.ArrayLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitArrayValue(Simpleflow.Parser.SimpleflowParser.ArrayValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayValue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowParserBaseVisitor`1.VisitEos(Simpleflow.Parser.SimpleflowParser.EosContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.eos"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.ISimpleflowParserListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Simpleflow.Parser.SimpleflowParser"/>.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterTemplateStringLiteral(Simpleflow.Parser.SimpleflowParser.TemplateStringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitTemplateStringLiteral(Simpleflow.Parser.SimpleflowParser.TemplateStringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterTemplateStringAtom(Simpleflow.Parser.SimpleflowParser.TemplateStringAtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringAtom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitTemplateStringAtom(Simpleflow.Parser.SimpleflowParser.TemplateStringAtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringAtom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterIdentifierIndex(Simpleflow.Parser.SimpleflowParser.IdentifierIndexContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.identifierIndex"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitIdentifierIndex(Simpleflow.Parser.SimpleflowParser.IdentifierIndexContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.identifierIndex"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterIndex(Simpleflow.Parser.SimpleflowParser.IndexContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.index"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitIndex(Simpleflow.Parser.SimpleflowParser.IndexContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.index"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterIndexExpression(Simpleflow.Parser.SimpleflowParser.IndexExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.indexExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitIndexExpression(Simpleflow.Parser.SimpleflowParser.IndexExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.indexExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterArrayLiteral(Simpleflow.Parser.SimpleflowParser.ArrayLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitArrayLiteral(Simpleflow.Parser.SimpleflowParser.ArrayLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterArrayValue(Simpleflow.Parser.SimpleflowParser.ArrayValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitArrayValue(Simpleflow.Parser.SimpleflowParser.ArrayValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.EnterEos(Simpleflow.Parser.SimpleflowParser.EosContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.eos"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserListener.ExitEos(Simpleflow.Parser.SimpleflowParser.EosContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.eos"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Simpleflow.Parser.ISimpleflowParserVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Simpleflow.Parser.SimpleflowParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitTemplateStringLiteral(Simpleflow.Parser.SimpleflowParser.TemplateStringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitTemplateStringAtom(Simpleflow.Parser.SimpleflowParser.TemplateStringAtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.templateStringAtom"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitIdentifierIndex(Simpleflow.Parser.SimpleflowParser.IdentifierIndexContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.identifierIndex"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitIndex(Simpleflow.Parser.SimpleflowParser.IndexContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.index"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitIndexExpression(Simpleflow.Parser.SimpleflowParser.IndexExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.indexExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitArrayLiteral(Simpleflow.Parser.SimpleflowParser.ArrayLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitArrayValue(Simpleflow.Parser.SimpleflowParser.ArrayValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arrayValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowParserVisitor`1.VisitEos(Simpleflow.Parser.SimpleflowParser.EosContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.eos"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Resources.Message">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.CannotIgnoreIdentifierForJsonObj">
            <summary>
              Looks up a localized string similar to JSON object cannot be defined by ignoring variable. Either remove that statement or provide a proper name to it instead of using _.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.InvalidInput">
            <summary>
              Looks up a localized string similar to Invalid input.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.InvalidPartialKeywordUsage">
            <summary>
              Looks up a localized string similar to &apos;partial&apos; keyword can only be used with JSON object to update properties.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.RegisterNonStaticMethodError">
            <summary>
              Looks up a localized string similar to Provide static method only. It does not support non-static method.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.RequestedEnumValueNotFound">
            <summary>
              Looks up a localized string similar to Requested value &apos;{0}&apos; was not found in type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.ReservedWordException">
            <summary>
              Looks up a localized string similar to variable name &apos;{0}&apos; is a reserved word, cannot be used for variable name.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.ServiceCannotBeNull">
            <summary>
              Looks up a localized string similar to Any one of the service cannot be null in array of services..
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.TypeMismatchWithExistingVar">
            <summary>
              Looks up a localized string similar to Type mismatch. Please choose a different name instead of using existing variable with a different type.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.VariableAlreadyDefined">
            <summary>
              Looks up a localized string similar to A variable named &apos;{0}&apos; is already defined.
            </summary>
        </member>
        <member name="T:Simpleflow.Services.CacheService">
            <summary>
            A service to cache the generate code instructions
            </summary>
        </member>
        <member name="M:Simpleflow.Services.CacheService.#ctor(Simpleflow.CacheOptions)">
            <summary>
            
            </summary>
            <param name="cacheOptions">
            </param>
        </member>
        <member name="M:Simpleflow.Services.CacheService.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Services.CacheService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Services.CacheService.GetScriptUniqueId(Simpleflow.CacheOptions,System.String)">
            <summary>
            Gets script unique id by creating hash (SHA256) for the input script
            </summary>
            <param name="contextCacheOptions"></param>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.Services.CompilerService">
            <summary>
            <see cref="T:Simpleflow.Services.CompilerService"/> to parse the instructions
            and generate machine code
            </summary>
        </member>
        <member name="M:Simpleflow.Services.CompilerService.#ctor(Simpleflow.IFunctionRegister,Simpleflow.IOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="functionRegister"></param>
        </member>
        <member name="M:Simpleflow.Services.CompilerService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.Services.ExecutionService">
            <summary>
            A service to run the machine code instructions
            </summary>
        </member>
        <member name="M:Simpleflow.Services.ExecutionService.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Services.ExecutionService.#ctor(Simpleflow.IOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Simpleflow.Services.ExecutionService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.Simpleflow">
            <summary>
            Simpleflow executes instructions. It's thread safe.
            </summary>
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0,Simpleflow.IContextOptions)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0,Simpleflow.IFunctionRegister)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0,Simpleflow.IContextOptions,Simpleflow.IFunctionRegister)">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.SimpleflowEngine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowEngine.Run``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="TInput"></typeparam>
            <param name="script"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.SimpleflowPipelineBuilder">
            <summary>
            Builds pipeline using middleware and with default services.
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Simpleflow.SimpleflowPipelineBuilder"/>
            </summary>
        </member>
        <member name="P:Simpleflow.SimpleflowPipelineBuilder.Services">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IOptions)">
            <summary>
            Adds default core services
            <br /> <see cref="T:Simpleflow.Services.CacheService"/>
            <br /> <see cref="T:Simpleflow.Services.CompilerService"/>
            <br /> <see cref="T:Simpleflow.Services.ExecutionService"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IFunctionRegister,Simpleflow.IOptions)">
            <summary>
            Adds default core services
            <br /> <see cref="T:Simpleflow.Services.CacheService"/>
            <br /> <see cref="T:Simpleflow.Services.CompilerService"/>
            <br /> <see cref="T:Simpleflow.Services.ExecutionService"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.AddPipelineServices(Simpleflow.IFlowPipelineService[])">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.Build">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.SimpleflowTrace">
            <summary>
            Represents trace log
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Simpleflow.SimpleflowTrace"/>
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.CreateNewTracePoint(System.String)">
            <summary>
            Adds service to trace, internal purpose only for implementing ISimpleflow 
            </summary>
            <param name="serviceName"></param>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.Write(System.String)">
            <summary>
            Writes message to log trace 
            </summary>
            <param name="message">Message to write</param>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.GetLogs">
            <summary>
            Gets logs of trace
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.ToString">
            <summary>
            Gets services trace log
            </summary>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.SyntaxError">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
