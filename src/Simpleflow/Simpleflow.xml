<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Simpleflow</name>
    </assembly>
    <members>
        <member name="T:Simpleflow.CodeGenerator.SimpleflowCodeVisitor`1">
            <summary>
             Handles Program, Let, Mutate and Rule 
            </summary>
            <typeparam name="TArg"></typeparam>
        </member>
        <member name="M:Simpleflow.CodeGenerator.SimpleflowCodeVisitor`1.CallListAddMethod(System.Linq.Expressions.Expression,System.String)">
            <summary>
             Trim first and last quotes
            </summary>
            <param name="string"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.Exceptions.DuplicateFunctionException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.DuplicateFunctionException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Simpleflow.Exceptions.DuplicateParametersException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Simpleflow.Exceptions.DuplicateVariableDeclarationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.DuplicateVariableDeclarationException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Simpleflow.Exceptions.DuplicateVariableDeclarationException.VariableName">
            <summary>
            Gets name of the variable that has been declared more than once
            </summary>
        </member>
        <member name="T:Simpleflow.Exceptions.InvalidFunctionException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.InvalidFunctionParameterNameException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Simpleflow.Exceptions.SyntaxException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.SyntaxException.#ctor(System.String,System.Collections.Generic.IEnumerable{Simpleflow.SyntaxError})">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="errors"></param>
        </member>
        <member name="T:Simpleflow.Exceptions.UndeclaredVariableException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Exceptions.UndeclaredVariableException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Simpleflow.Extensions.SimpleflowExtensions">
            <summary>
            Extension methods to run Simpleflow with various input types.
            </summary>
        </member>
        <member name="T:Simpleflow.FlowContext`1">
            <summary>
            A <see cref="!:FlowContext"/> instance represents input, output, and which has
            special property "Items" can be used by middleware to share data among.
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.Script">
            <summary>
            Gets or initializes input.
            The purpose of init access modifier to retain the input as it is by preventing the changes
            by middleware
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.Argument">
            There can be one argument can be passed and used as context in script
        </member>
        <member name="P:Simpleflow.FlowContext`1.ActivityRegister">
            
        </member>
        <member name="P:Simpleflow.FlowContext`1.Options">
            
        </member>
        <member name="P:Simpleflow.FlowContext`1.Output">
            <summary>
            Gets or sets output.
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.Trace">
            <summary>
            Gets trace to verify the executed middleware
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.Internals">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.FlowContext`1.GetScriptHash">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.FlowContext`1.FlowInternals">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.FlowInternals.CompiledScript">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContext`1.FlowInternals.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="T:Simpleflow.FlowContextOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.FlowContextOptions.Id">
            <summary>
            Gets or sets unique id of the script
            If Id is supplied, <see cref="T:Simpleflow.Services.CacheService"/> will use it to identify the compiled object
            in cache otherwise it creates a hash id for that script.
            </summary>
        </member>
        <member name="T:Simpleflow.FlowInput`1">
            <summary>
            Represents input object to simple flow
            </summary>
        </member>
        <member name="P:Simpleflow.FlowInput`1.Argument">
            There can be one argument can be passed and used as context in script
        </member>
        <member name="P:Simpleflow.FlowInput`1.Options">
            
        </member>
        <member name="T:Simpleflow.FlowOptions">
            <inheritdoc />
        </member>
        <member name="P:Simpleflow.FlowOptions.AllowArgumentToMutate">
            <summary>
            Gets or sets AllowArgumentToMutate
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOptions.AllowFunctions">
            <summary>
            Gets or sets AllowFunctions
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOptions.DenyFunctions">
            <summary>
            Gets or sets DenyFunctions
            </summary>
        </member>
        <member name="T:Simpleflow.FlowOutput">
            <summary>
            Represents final output of simple flow
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOutput.Messages">
            <summary> 
            Get or set messages
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOutput.Errors">
            <summary>
            if there are errors engines throws an exception ValidationException 
            </summary>
        </member>
        <member name="P:Simpleflow.FlowOutput.Output">
            <summary>
            Get or set arbitrary objects as output from script
            </summary>
        </member>
        <member name="T:Simpleflow.FunctionRegister">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.FunctionRegister.Default">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.FunctionRegister.Add(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="activity"></param>
            <returns></returns>
            
        </member>
        <member name="M:Simpleflow.FunctionRegister.Add(System.String,System.Delegate)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="delegate"></param>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.FunctionRegister.GetFunction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.FunctionRegister.IsFunctionAvailableInClass(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.IFunctionRegister">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.IFunctionRegister.Add(System.String,System.Delegate)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="delegate"></param>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.IFunctionRegister.GetFunction(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.IContextOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.IContextOptions.Id">
            <summary>
            Gets unique id of the script
            </summary>
        </member>
        <member name="T:Simpleflow.IFlowPipelineService">
            <summary>
            Represents middleware abstraction for pipeline configuration.
            </summary>
        </member>
        <member name="M:Simpleflow.IFlowPipelineService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <summary>
            Run pipeline service
            </summary>
            <param name="context"></param>
            <param name="next"><paramref name="next"/> would be null if no service in queue after the current one</param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.IOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.AllowArgumentToMutate">
            <summary>
            Gets or sets AllowArgumentToMutate
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.AllowFunctions">
            <summary>
            Gets or sets AllowFunctions
            </summary>
        </member>
        <member name="P:Simpleflow.IOptions.DenyFunctions">
            <summary>
            Gets or sets DenyFunctions
            DenyFunctions overrides the <see cref="P:Simpleflow.IOptions.AllowFunctions"/>
            </summary>
        </member>
        <member name="T:Simpleflow.ISimpleflow">
            <summary>
            Defines a contract to execute simple flow
            </summary>
        </member>
        <member name="T:Simpleflow.ISimpleflowPipelineBuilder">
            <summary>
            Represents simple flow builder abstraction.
            Builds pipeline using middleware and with default services.
            </summary>
        </member>
        <member name="P:Simpleflow.ISimpleflowPipelineBuilder.Services">
            <summary>
            Gets list of services that have been added
            </summary>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IOptions)">
            <summary>
            Adds default core services. Please check the implementation
            class documentation for added default services.
            </summary>
            <returns>The <see cref="T:Simpleflow.ISimpleflowPipelineBuilder"/></returns>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IFunctionRegister,Simpleflow.IOptions)">
            <summary>
            Adds default core services. Please check the implementation
            class documentation for added default services.
            </summary>
            <returns>The <see cref="T:Simpleflow.ISimpleflowPipelineBuilder"/></returns>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.AddPipelineServices(Simpleflow.IFlowPipelineService[])">
            <summary>
            Adds middleware services to simpleflow 
            </summary>
            <param name="services">Specify the list of services to be added</param>
            <returns>The <see cref="T:Simpleflow.ISimpleflowPipelineBuilder"/> </returns>
        </member>
        <member name="M:Simpleflow.ISimpleflowPipelineBuilder.Build">
            <summary>
            Builds pipeline and provides core engine
            with all the middleware that have been configured
            </summary>
            <returns>The <see cref="T:Simpleflow.ISimpleflow"/></returns>
        </member>
        <member name="T:Simpleflow.NextPipelineService`1">
            <summary>
            Represents a function to execute next middleware in the pipeline. 
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Simpleflow.Parser.CommonBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.ICommonListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.EnterObjectIdentifier(Simpleflow.Parser.CommonParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.ExitObjectIdentifier(Simpleflow.Parser.CommonParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.EnterStringLiteral(Simpleflow.Parser.CommonParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.ExitStringLiteral(Simpleflow.Parser.CommonParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.EnterNumberLiteral(Simpleflow.Parser.CommonParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.ExitNumberLiteral(Simpleflow.Parser.CommonParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.EnterBoolLeteral(Simpleflow.Parser.CommonParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.ExitBoolLeteral(Simpleflow.Parser.CommonParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.EnterNoneLiteral(Simpleflow.Parser.CommonParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.ExitNoneLiteral(Simpleflow.Parser.CommonParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Simpleflow.Parser.CommonBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.ICommonVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.CommonParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.objectIdentifier"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseVisitor`1.VisitStringLiteral(Simpleflow.Parser.CommonParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.stringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseVisitor`1.VisitNumberLiteral(Simpleflow.Parser.CommonParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.numberLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseVisitor`1.VisitBoolLeteral(Simpleflow.Parser.CommonParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.boolLeteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.CommonBaseVisitor`1.VisitNoneLiteral(Simpleflow.Parser.CommonParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.noneLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.ICommonListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Simpleflow.Parser.CommonParser"/>.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.EnterObjectIdentifier(Simpleflow.Parser.CommonParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.ExitObjectIdentifier(Simpleflow.Parser.CommonParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.EnterStringLiteral(Simpleflow.Parser.CommonParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.ExitStringLiteral(Simpleflow.Parser.CommonParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.EnterNumberLiteral(Simpleflow.Parser.CommonParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.ExitNumberLiteral(Simpleflow.Parser.CommonParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.EnterBoolLeteral(Simpleflow.Parser.CommonParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.ExitBoolLeteral(Simpleflow.Parser.CommonParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.EnterNoneLiteral(Simpleflow.Parser.CommonParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ICommonListener.ExitNoneLiteral(Simpleflow.Parser.CommonParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Simpleflow.Parser.ICommonVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Simpleflow.Parser.CommonParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.ICommonVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.CommonParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ICommonVisitor`1.VisitStringLiteral(Simpleflow.Parser.CommonParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ICommonVisitor`1.VisitNumberLiteral(Simpleflow.Parser.CommonParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ICommonVisitor`1.VisitBoolLeteral(Simpleflow.Parser.CommonParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ICommonVisitor`1.VisitNoneLiteral(Simpleflow.Parser.CommonParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.CommonParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.ExpressionBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.IExpressionListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterArithmeticExpression(Simpleflow.Parser.ExpressionParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitArithmeticExpression(Simpleflow.Parser.ExpressionParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterAtom(Simpleflow.Parser.ExpressionParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitAtom(Simpleflow.Parser.ExpressionParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterFunction(Simpleflow.Parser.ExpressionParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitFunction(Simpleflow.Parser.ExpressionParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterFunctionParameter(Simpleflow.Parser.ExpressionParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitFunctionParameter(Simpleflow.Parser.ExpressionParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterFunctionParameterValue(Simpleflow.Parser.ExpressionParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitFunctionParameterValue(Simpleflow.Parser.ExpressionParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterObjectIdentifier(Simpleflow.Parser.ExpressionParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitObjectIdentifier(Simpleflow.Parser.ExpressionParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterStringLiteral(Simpleflow.Parser.ExpressionParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitStringLiteral(Simpleflow.Parser.ExpressionParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterNumberLiteral(Simpleflow.Parser.ExpressionParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitNumberLiteral(Simpleflow.Parser.ExpressionParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterBoolLeteral(Simpleflow.Parser.ExpressionParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitBoolLeteral(Simpleflow.Parser.ExpressionParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterNoneLiteral(Simpleflow.Parser.ExpressionParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitNoneLiteral(Simpleflow.Parser.ExpressionParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterJsonObj(Simpleflow.Parser.ExpressionParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitJsonObj(Simpleflow.Parser.ExpressionParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterPair(Simpleflow.Parser.ExpressionParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitPair(Simpleflow.Parser.ExpressionParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterValue(Simpleflow.Parser.ExpressionParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitValue(Simpleflow.Parser.ExpressionParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Simpleflow.Parser.ExpressionBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.IExpressionVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.ExpressionParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.arithmeticExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitAtom(Simpleflow.Parser.ExpressionParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.atom"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitFunction(Simpleflow.Parser.ExpressionParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitFunctionParameter(Simpleflow.Parser.ExpressionParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameter"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.ExpressionParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameterValue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.ExpressionParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.objectIdentifier"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitStringLiteral(Simpleflow.Parser.ExpressionParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.stringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitNumberLiteral(Simpleflow.Parser.ExpressionParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.numberLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitBoolLeteral(Simpleflow.Parser.ExpressionParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.boolLeteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitNoneLiteral(Simpleflow.Parser.ExpressionParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.noneLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitJsonObj(Simpleflow.Parser.ExpressionParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.jsonObj"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitPair(Simpleflow.Parser.ExpressionParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ExpressionBaseVisitor`1.VisitValue(Simpleflow.Parser.ExpressionParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.IExpressionListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Simpleflow.Parser.ExpressionParser"/>.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterArithmeticExpression(Simpleflow.Parser.ExpressionParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitArithmeticExpression(Simpleflow.Parser.ExpressionParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterAtom(Simpleflow.Parser.ExpressionParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitAtom(Simpleflow.Parser.ExpressionParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterFunction(Simpleflow.Parser.ExpressionParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitFunction(Simpleflow.Parser.ExpressionParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterFunctionParameter(Simpleflow.Parser.ExpressionParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitFunctionParameter(Simpleflow.Parser.ExpressionParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterFunctionParameterValue(Simpleflow.Parser.ExpressionParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitFunctionParameterValue(Simpleflow.Parser.ExpressionParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterObjectIdentifier(Simpleflow.Parser.ExpressionParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitObjectIdentifier(Simpleflow.Parser.ExpressionParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterStringLiteral(Simpleflow.Parser.ExpressionParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitStringLiteral(Simpleflow.Parser.ExpressionParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterNumberLiteral(Simpleflow.Parser.ExpressionParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitNumberLiteral(Simpleflow.Parser.ExpressionParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterBoolLeteral(Simpleflow.Parser.ExpressionParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitBoolLeteral(Simpleflow.Parser.ExpressionParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterNoneLiteral(Simpleflow.Parser.ExpressionParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitNoneLiteral(Simpleflow.Parser.ExpressionParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterJsonObj(Simpleflow.Parser.ExpressionParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitJsonObj(Simpleflow.Parser.ExpressionParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterPair(Simpleflow.Parser.ExpressionParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitPair(Simpleflow.Parser.ExpressionParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.EnterValue(Simpleflow.Parser.ExpressionParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionListener.ExitValue(Simpleflow.Parser.ExpressionParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Simpleflow.Parser.IExpressionVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Simpleflow.Parser.ExpressionParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.ExpressionParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitAtom(Simpleflow.Parser.ExpressionParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitFunction(Simpleflow.Parser.ExpressionParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitFunctionParameter(Simpleflow.Parser.ExpressionParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.ExpressionParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.ExpressionParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitStringLiteral(Simpleflow.Parser.ExpressionParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitNumberLiteral(Simpleflow.Parser.ExpressionParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitBoolLeteral(Simpleflow.Parser.ExpressionParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitNoneLiteral(Simpleflow.Parser.ExpressionParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitJsonObj(Simpleflow.Parser.ExpressionParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitPair(Simpleflow.Parser.ExpressionParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IExpressionVisitor`1.VisitValue(Simpleflow.Parser.ExpressionParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.ExpressionParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.JsonBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.IJsonListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterJsonObj(Simpleflow.Parser.JsonParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitJsonObj(Simpleflow.Parser.JsonParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterPair(Simpleflow.Parser.JsonParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitPair(Simpleflow.Parser.JsonParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterValue(Simpleflow.Parser.JsonParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitValue(Simpleflow.Parser.JsonParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterObjectIdentifier(Simpleflow.Parser.JsonParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitObjectIdentifier(Simpleflow.Parser.JsonParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterStringLiteral(Simpleflow.Parser.JsonParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitStringLiteral(Simpleflow.Parser.JsonParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterNumberLiteral(Simpleflow.Parser.JsonParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitNumberLiteral(Simpleflow.Parser.JsonParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterBoolLeteral(Simpleflow.Parser.JsonParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitBoolLeteral(Simpleflow.Parser.JsonParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterNoneLiteral(Simpleflow.Parser.JsonParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitNoneLiteral(Simpleflow.Parser.JsonParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Simpleflow.Parser.JsonBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.IJsonVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitJsonObj(Simpleflow.Parser.JsonParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.jsonObj"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitPair(Simpleflow.Parser.JsonParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitValue(Simpleflow.Parser.JsonParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.JsonParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.objectIdentifier"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitStringLiteral(Simpleflow.Parser.JsonParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.stringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitNumberLiteral(Simpleflow.Parser.JsonParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.numberLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitBoolLeteral(Simpleflow.Parser.JsonParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.boolLeteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.JsonBaseVisitor`1.VisitNoneLiteral(Simpleflow.Parser.JsonParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.noneLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.IJsonListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Simpleflow.Parser.JsonParser"/>.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterJsonObj(Simpleflow.Parser.JsonParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitJsonObj(Simpleflow.Parser.JsonParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterPair(Simpleflow.Parser.JsonParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitPair(Simpleflow.Parser.JsonParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterValue(Simpleflow.Parser.JsonParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitValue(Simpleflow.Parser.JsonParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterObjectIdentifier(Simpleflow.Parser.JsonParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitObjectIdentifier(Simpleflow.Parser.JsonParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterStringLiteral(Simpleflow.Parser.JsonParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitStringLiteral(Simpleflow.Parser.JsonParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterNumberLiteral(Simpleflow.Parser.JsonParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitNumberLiteral(Simpleflow.Parser.JsonParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterBoolLeteral(Simpleflow.Parser.JsonParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitBoolLeteral(Simpleflow.Parser.JsonParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.EnterNoneLiteral(Simpleflow.Parser.JsonParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IJsonListener.ExitNoneLiteral(Simpleflow.Parser.JsonParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Simpleflow.Parser.IJsonVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Simpleflow.Parser.JsonParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitJsonObj(Simpleflow.Parser.JsonParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitPair(Simpleflow.Parser.JsonParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitValue(Simpleflow.Parser.JsonParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.JsonParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitStringLiteral(Simpleflow.Parser.JsonParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitNumberLiteral(Simpleflow.Parser.JsonParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitBoolLeteral(Simpleflow.Parser.JsonParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IJsonVisitor`1.VisitNoneLiteral(Simpleflow.Parser.JsonParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.JsonParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.PredicateBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.IPredicateListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterPredicate(Simpleflow.Parser.PredicateParser.PredicateContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.predicate"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitPredicate(Simpleflow.Parser.PredicateParser.PredicateContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.predicate"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterTestExpression(Simpleflow.Parser.PredicateParser.TestExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.testExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitTestExpression(Simpleflow.Parser.PredicateParser.TestExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.testExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterLogicalOperator(Simpleflow.Parser.PredicateParser.LogicalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.logicalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitLogicalOperator(Simpleflow.Parser.PredicateParser.LogicalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.logicalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterRelationalOperator(Simpleflow.Parser.PredicateParser.RelationalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.relationalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitRelationalOperator(Simpleflow.Parser.PredicateParser.RelationalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.relationalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterOperand(Simpleflow.Parser.PredicateParser.OperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.operand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitOperand(Simpleflow.Parser.PredicateParser.OperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.operand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterUnaryOperand(Simpleflow.Parser.PredicateParser.UnaryOperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.unaryOperand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitUnaryOperand(Simpleflow.Parser.PredicateParser.UnaryOperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.unaryOperand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterObjectIdentifier(Simpleflow.Parser.PredicateParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitObjectIdentifier(Simpleflow.Parser.PredicateParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterStringLiteral(Simpleflow.Parser.PredicateParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitStringLiteral(Simpleflow.Parser.PredicateParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterNumberLiteral(Simpleflow.Parser.PredicateParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitNumberLiteral(Simpleflow.Parser.PredicateParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterBoolLeteral(Simpleflow.Parser.PredicateParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitBoolLeteral(Simpleflow.Parser.PredicateParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterNoneLiteral(Simpleflow.Parser.PredicateParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitNoneLiteral(Simpleflow.Parser.PredicateParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterArithmeticExpression(Simpleflow.Parser.PredicateParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitArithmeticExpression(Simpleflow.Parser.PredicateParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterAtom(Simpleflow.Parser.PredicateParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitAtom(Simpleflow.Parser.PredicateParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterFunction(Simpleflow.Parser.PredicateParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitFunction(Simpleflow.Parser.PredicateParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterFunctionParameter(Simpleflow.Parser.PredicateParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitFunctionParameter(Simpleflow.Parser.PredicateParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterFunctionParameterValue(Simpleflow.Parser.PredicateParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitFunctionParameterValue(Simpleflow.Parser.PredicateParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterJsonObj(Simpleflow.Parser.PredicateParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitJsonObj(Simpleflow.Parser.PredicateParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterPair(Simpleflow.Parser.PredicateParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitPair(Simpleflow.Parser.PredicateParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterValue(Simpleflow.Parser.PredicateParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitValue(Simpleflow.Parser.PredicateParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Simpleflow.Parser.PredicateBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.IPredicateVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitPredicate(Simpleflow.Parser.PredicateParser.PredicateContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.predicate"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitTestExpression(Simpleflow.Parser.PredicateParser.TestExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.testExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitLogicalOperator(Simpleflow.Parser.PredicateParser.LogicalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.logicalOperator"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitRelationalOperator(Simpleflow.Parser.PredicateParser.RelationalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.relationalOperator"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitOperand(Simpleflow.Parser.PredicateParser.OperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.operand"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitUnaryOperand(Simpleflow.Parser.PredicateParser.UnaryOperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.unaryOperand"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.PredicateParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.objectIdentifier"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitStringLiteral(Simpleflow.Parser.PredicateParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.stringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitNumberLiteral(Simpleflow.Parser.PredicateParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.numberLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitBoolLeteral(Simpleflow.Parser.PredicateParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.boolLeteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitNoneLiteral(Simpleflow.Parser.PredicateParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.noneLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.PredicateParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.arithmeticExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitAtom(Simpleflow.Parser.PredicateParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.atom"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitFunction(Simpleflow.Parser.PredicateParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitFunctionParameter(Simpleflow.Parser.PredicateParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameter"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.PredicateParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameterValue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitJsonObj(Simpleflow.Parser.PredicateParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.jsonObj"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitPair(Simpleflow.Parser.PredicateParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.PredicateBaseVisitor`1.VisitValue(Simpleflow.Parser.PredicateParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.IPredicateListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Simpleflow.Parser.PredicateParser"/>.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterPredicate(Simpleflow.Parser.PredicateParser.PredicateContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitPredicate(Simpleflow.Parser.PredicateParser.PredicateContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterTestExpression(Simpleflow.Parser.PredicateParser.TestExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitTestExpression(Simpleflow.Parser.PredicateParser.TestExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterLogicalOperator(Simpleflow.Parser.PredicateParser.LogicalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitLogicalOperator(Simpleflow.Parser.PredicateParser.LogicalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterRelationalOperator(Simpleflow.Parser.PredicateParser.RelationalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitRelationalOperator(Simpleflow.Parser.PredicateParser.RelationalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterOperand(Simpleflow.Parser.PredicateParser.OperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitOperand(Simpleflow.Parser.PredicateParser.OperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterUnaryOperand(Simpleflow.Parser.PredicateParser.UnaryOperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitUnaryOperand(Simpleflow.Parser.PredicateParser.UnaryOperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterObjectIdentifier(Simpleflow.Parser.PredicateParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitObjectIdentifier(Simpleflow.Parser.PredicateParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterStringLiteral(Simpleflow.Parser.PredicateParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitStringLiteral(Simpleflow.Parser.PredicateParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterNumberLiteral(Simpleflow.Parser.PredicateParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitNumberLiteral(Simpleflow.Parser.PredicateParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterBoolLeteral(Simpleflow.Parser.PredicateParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitBoolLeteral(Simpleflow.Parser.PredicateParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterNoneLiteral(Simpleflow.Parser.PredicateParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitNoneLiteral(Simpleflow.Parser.PredicateParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterArithmeticExpression(Simpleflow.Parser.PredicateParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitArithmeticExpression(Simpleflow.Parser.PredicateParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterAtom(Simpleflow.Parser.PredicateParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitAtom(Simpleflow.Parser.PredicateParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterFunction(Simpleflow.Parser.PredicateParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitFunction(Simpleflow.Parser.PredicateParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterFunctionParameter(Simpleflow.Parser.PredicateParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitFunctionParameter(Simpleflow.Parser.PredicateParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterFunctionParameterValue(Simpleflow.Parser.PredicateParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitFunctionParameterValue(Simpleflow.Parser.PredicateParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterJsonObj(Simpleflow.Parser.PredicateParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitJsonObj(Simpleflow.Parser.PredicateParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterPair(Simpleflow.Parser.PredicateParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitPair(Simpleflow.Parser.PredicateParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.EnterValue(Simpleflow.Parser.PredicateParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateListener.ExitValue(Simpleflow.Parser.PredicateParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Simpleflow.Parser.IPredicateVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Simpleflow.Parser.PredicateParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitPredicate(Simpleflow.Parser.PredicateParser.PredicateContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitTestExpression(Simpleflow.Parser.PredicateParser.TestExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitLogicalOperator(Simpleflow.Parser.PredicateParser.LogicalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitRelationalOperator(Simpleflow.Parser.PredicateParser.RelationalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitOperand(Simpleflow.Parser.PredicateParser.OperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitUnaryOperand(Simpleflow.Parser.PredicateParser.UnaryOperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.PredicateParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitStringLiteral(Simpleflow.Parser.PredicateParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitNumberLiteral(Simpleflow.Parser.PredicateParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitBoolLeteral(Simpleflow.Parser.PredicateParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitNoneLiteral(Simpleflow.Parser.PredicateParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.PredicateParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitAtom(Simpleflow.Parser.PredicateParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitFunction(Simpleflow.Parser.PredicateParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitFunctionParameter(Simpleflow.Parser.PredicateParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.PredicateParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitJsonObj(Simpleflow.Parser.PredicateParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitPair(Simpleflow.Parser.PredicateParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.IPredicateVisitor`1.VisitValue(Simpleflow.Parser.PredicateParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.PredicateParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.SimpleflowBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.ISimpleflowListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterValue(Simpleflow.Parser.SimpleflowParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitValue(Simpleflow.Parser.SimpleflowParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Simpleflow.Parser.SimpleflowBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Simpleflow.Parser.ISimpleflowVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.SimpleflowBaseVisitor`1.VisitValue(Simpleflow.Parser.SimpleflowParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Parser.ISimpleflowListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Simpleflow.Parser.SimpleflowParser"/>.
            </summary>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.EnterValue(Simpleflow.Parser.SimpleflowParser.ValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowListener.ExitValue(Simpleflow.Parser.SimpleflowParser.ValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Simpleflow.Parser.ISimpleflowVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Simpleflow.Parser.SimpleflowParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitProgram(Simpleflow.Parser.SimpleflowParser.ProgramContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitRuleStmt(Simpleflow.Parser.SimpleflowParser.RuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.ruleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitEndRuleStmt(Simpleflow.Parser.SimpleflowParser.EndRuleStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.endRuleStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitExitStmt(Simpleflow.Parser.SimpleflowParser.ExitStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.exitStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitGeneralStatement(Simpleflow.Parser.SimpleflowParser.GeneralStatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.generalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitLetStmt(Simpleflow.Parser.SimpleflowParser.LetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.letStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitSetStmt(Simpleflow.Parser.SimpleflowParser.SetStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.setStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitMessageStmt(Simpleflow.Parser.SimpleflowParser.MessageStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitErrorStmt(Simpleflow.Parser.SimpleflowParser.ErrorStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.errorStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitMessageText(Simpleflow.Parser.SimpleflowParser.MessageTextContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.messageText"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitOutputStmt(Simpleflow.Parser.SimpleflowParser.OutputStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.outputStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitFunctionStmt(Simpleflow.Parser.SimpleflowParser.FunctionStmtContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionStmt"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitExpression(Simpleflow.Parser.SimpleflowParser.ExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitPredicate(Simpleflow.Parser.SimpleflowParser.PredicateContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.predicate"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitTestExpression(Simpleflow.Parser.SimpleflowParser.TestExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.testExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitLogicalOperator(Simpleflow.Parser.SimpleflowParser.LogicalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.logicalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitRelationalOperator(Simpleflow.Parser.SimpleflowParser.RelationalOperatorContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.relationalOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitOperand(Simpleflow.Parser.SimpleflowParser.OperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.operand"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitUnaryOperand(Simpleflow.Parser.SimpleflowParser.UnaryOperandContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.unaryOperand"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitObjectIdentifier(Simpleflow.Parser.SimpleflowParser.ObjectIdentifierContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.objectIdentifier"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitStringLiteral(Simpleflow.Parser.SimpleflowParser.StringLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.stringLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitNumberLiteral(Simpleflow.Parser.SimpleflowParser.NumberLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.numberLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitBoolLeteral(Simpleflow.Parser.SimpleflowParser.BoolLeteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.boolLeteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitNoneLiteral(Simpleflow.Parser.SimpleflowParser.NoneLiteralContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.noneLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitArithmeticExpression(Simpleflow.Parser.SimpleflowParser.ArithmeticExpressionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.arithmeticExpression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitAtom(Simpleflow.Parser.SimpleflowParser.AtomContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.atom"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitFunction(Simpleflow.Parser.SimpleflowParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitFunctionParameter(Simpleflow.Parser.SimpleflowParser.FunctionParameterContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameter"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitFunctionParameterValue(Simpleflow.Parser.SimpleflowParser.FunctionParameterValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.functionParameterValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitJsonObj(Simpleflow.Parser.SimpleflowParser.JsonObjContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.jsonObj"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitPair(Simpleflow.Parser.SimpleflowParser.PairContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Simpleflow.Parser.ISimpleflowVisitor`1.VisitValue(Simpleflow.Parser.SimpleflowParser.ValueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Simpleflow.Parser.SimpleflowParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Simpleflow.Resources.Message">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.InvalidInput">
            <summary>
              Looks up a localized string similar to Invalid input.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.InvalidPartialKeywordUsage">
            <summary>
              Looks up a localized string similar to &quot;&apos;partial&apos; keyword can only be used with JSON object to update properties.&quot;.
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.RegisterNonStaticMethodError">
            <summary>
              Looks up a localized string similar to Provide static method only. It does not support non-static method..
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.ReservedWordException">
            <summary>
              Looks up a localized string similar to variable name &apos;{0}&apos; is a reserved word, cannot be used for variable name..
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.ServiceCannotBeNull">
            <summary>
              Looks up a localized string similar to Any one of the service cannot be null in array of services..
            </summary>
        </member>
        <member name="P:Simpleflow.Resources.Message.VariableAlreadyDefined">
            <summary>
              Looks up a localized string similar to A variable named &apos;{0}&apos; is already defined..
            </summary>
        </member>
        <member name="T:Simpleflow.Services.CacheService">
            <summary>
            A service to cache the generate code instructions
            </summary>
        </member>
        <member name="M:Simpleflow.Services.CacheService.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.Services.CacheService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.Services.CompilerService">
            <summary>
            <see cref="T:Simpleflow.Services.CompilerService"/> to parse the instructions
            and generate machine code
            </summary>
        </member>
        <member name="M:Simpleflow.Services.CompilerService.#ctor(Simpleflow.IFunctionRegister,Simpleflow.IOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="activityRegister"></param>
        </member>
        <member name="M:Simpleflow.Services.CompilerService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.Services.ExecutionService">
            <summary>
            A service to run the machine code instructions
            </summary>
        </member>
        <member name="M:Simpleflow.Services.ExecutionService.Run``1(Simpleflow.FlowContext{``0},Simpleflow.NextPipelineService{``0})">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.Simpleflow">
            <summary>
            Simpleflow executes instructions. It's thread safe.
            </summary>
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0,Simpleflow.IContextOptions)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0,Simpleflow.IFunctionRegister)">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.Simpleflow.Run``1(System.String,``0,Simpleflow.IContextOptions,Simpleflow.IFunctionRegister)">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.SimpleflowEngine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowEngine.Run``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="TInput"></typeparam>
            <param name="script"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.SimpleflowPipelineBuilder">
            <summary>
            Builds pipeline using middleware and with default services.
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Simpleflow.SimpleflowPipelineBuilder"/>
            </summary>
        </member>
        <member name="P:Simpleflow.SimpleflowPipelineBuilder.Services">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IOptions)">
            <summary>
            Adds default core services
            <br /> <see cref="T:Simpleflow.Services.CacheService"/>
            <br /> <see cref="T:Simpleflow.Services.CompilerService"/>
            <br /> <see cref="T:Simpleflow.Services.ExecutionService"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.AddCorePipelineServices(Simpleflow.IFunctionRegister,Simpleflow.IOptions)">
            <summary>
            Adds default core services
            <br /> <see cref="T:Simpleflow.Services.CacheService"/>
            <br /> <see cref="T:Simpleflow.Services.CompilerService"/>
            <br /> <see cref="T:Simpleflow.Services.ExecutionService"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.AddPipelineServices(Simpleflow.IFlowPipelineService[])">
            <inheritdoc />
        </member>
        <member name="M:Simpleflow.SimpleflowPipelineBuilder.Build">
            <inheritdoc />
        </member>
        <member name="T:Simpleflow.SimpleflowTrace">
            <summary>
            Represents trace log
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Simpleflow.SimpleflowTrace"/>
            </summary>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.CreateNewTracePoint(System.String)">
            <summary>
            Adds service to trace, internal purpose only for implementing ISimpleflow 
            </summary>
            <param name="serviceName"></param>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.Write(System.String)">
            <summary>
            Writes message to log trace 
            </summary>
            <param name="message">Message to write</param>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.GetLogs">
            <summary>
            Gets logs of trace
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simpleflow.SimpleflowTrace.ToString">
            <summary>
            Gets services trace log
            </summary>
            <returns></returns>
        </member>
        <member name="T:Simpleflow.SyntaxError">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
