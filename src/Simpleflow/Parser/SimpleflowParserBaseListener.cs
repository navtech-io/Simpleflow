//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Navtech\Opensource\Simpleflow\src\Simpleflow\Parser\Grammar\SimpleflowParser.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Simpleflow.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISimpleflowParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
internal partial class SimpleflowParserBaseListener : ISimpleflowParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] SimpleflowParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] SimpleflowParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetStmt([NotNull] SimpleflowParser.LetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetStmt([NotNull] SimpleflowParser.LetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.ruleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleStmt([NotNull] SimpleflowParser.RuleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.ruleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleStmt([NotNull] SimpleflowParser.RuleStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.generalStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneralStatement([NotNull] SimpleflowParser.GeneralStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.generalStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneralStatement([NotNull] SimpleflowParser.GeneralStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.endRuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndRuleStmt([NotNull] SimpleflowParser.EndRuleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.endRuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndRuleStmt([NotNull] SimpleflowParser.EndRuleStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetStmt([NotNull] SimpleflowParser.SetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetStmt([NotNull] SimpleflowParser.SetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.messageStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMessageStmt([NotNull] SimpleflowParser.MessageStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.messageStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMessageStmt([NotNull] SimpleflowParser.MessageStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErrorStmt([NotNull] SimpleflowParser.ErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErrorStmt([NotNull] SimpleflowParser.ErrorStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.outputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputStmt([NotNull] SimpleflowParser.OutputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.outputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputStmt([NotNull] SimpleflowParser.OutputStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionStmt([NotNull] SimpleflowParser.FunctionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionStmt([NotNull] SimpleflowParser.FunctionStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExitStmt([NotNull] SimpleflowParser.ExitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExitStmt([NotNull] SimpleflowParser.ExitStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] SimpleflowParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] SimpleflowParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] SimpleflowParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] SimpleflowParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RelationalExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] SimpleflowParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RelationalExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] SimpleflowParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalExpression([NotNull] SimpleflowParser.LogicalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalExpression([NotNull] SimpleflowParser.LogicalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjectIdentiferExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectIdentiferExpression([NotNull] SimpleflowParser.ObjectIdentiferExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjectIdentiferExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectIdentiferExpression([NotNull] SimpleflowParser.ObjectIdentiferExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionExpression([NotNull] SimpleflowParser.FunctionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionExpression([NotNull] SimpleflowParser.FunctionExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayLiteralExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteralExpression([NotNull] SimpleflowParser.ArrayLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayLiteralExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteralExpression([NotNull] SimpleflowParser.ArrayLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleLiteralExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleLiteralExpression([NotNull] SimpleflowParser.SimpleLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleLiteralExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleLiteralExpression([NotNull] SimpleflowParser.SimpleLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] SimpleflowParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] SimpleflowParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>JsonObjLiteralExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsonObjLiteralExpression([NotNull] SimpleflowParser.JsonObjLiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>JsonObjLiteralExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsonObjLiteralExpression([NotNull] SimpleflowParser.JsonObjLiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] SimpleflowParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="SimpleflowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] SimpleflowParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.simpleLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleLiteral([NotNull] SimpleflowParser.SimpleLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.simpleLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleLiteral([NotNull] SimpleflowParser.SimpleLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.templateStringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateStringLiteral([NotNull] SimpleflowParser.TemplateStringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.templateStringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateStringLiteral([NotNull] SimpleflowParser.TemplateStringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.templateStringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateStringAtom([NotNull] SimpleflowParser.TemplateStringAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.templateStringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateStringAtom([NotNull] SimpleflowParser.TemplateStringAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] SimpleflowParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] SimpleflowParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArguments([NotNull] SimpleflowParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArguments([NotNull] SimpleflowParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.functionArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArgument([NotNull] SimpleflowParser.FunctionArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.functionArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArgument([NotNull] SimpleflowParser.FunctionArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.objectIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectIdentifier([NotNull] SimpleflowParser.ObjectIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.objectIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectIdentifier([NotNull] SimpleflowParser.ObjectIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.identifierIndex"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierIndex([NotNull] SimpleflowParser.IdentifierIndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.identifierIndex"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierIndex([NotNull] SimpleflowParser.IdentifierIndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex([NotNull] SimpleflowParser.IndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex([NotNull] SimpleflowParser.IndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.stringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] SimpleflowParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.stringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] SimpleflowParser.StringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberLiteral([NotNull] SimpleflowParser.NumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberLiteral([NotNull] SimpleflowParser.NumberLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.boolLeteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolLeteral([NotNull] SimpleflowParser.BoolLeteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.boolLeteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolLeteral([NotNull] SimpleflowParser.BoolLeteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.noneLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNoneLiteral([NotNull] SimpleflowParser.NoneLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.noneLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNoneLiteral([NotNull] SimpleflowParser.NoneLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] SimpleflowParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] SimpleflowParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.jsonObjLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJsonObjLiteral([NotNull] SimpleflowParser.JsonObjLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.jsonObjLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJsonObjLiteral([NotNull] SimpleflowParser.JsonObjLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPair([NotNull] SimpleflowParser.PairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPair([NotNull] SimpleflowParser.PairContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleflowParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEos([NotNull] SimpleflowParser.EosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleflowParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEos([NotNull] SimpleflowParser.EosContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Simpleflow.Parser
